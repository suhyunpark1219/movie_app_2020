{"version":3,"sources":["Movie.js","AppMoviepretty.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","async","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qSAmCeA,MA5Bf,YAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OACzC,OACI,yBAAKC,UAAY,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAY,gBACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOL,UAAU,iBACrBI,OAIb,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UC4BDC,E,2MA1CXC,MAAM,CACFC,WAAW,EACXC,OAAQ,I,EAGZC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC8BE,IAAMC,IAAI,8CADxC,gBACYL,EADZ,EACDM,KAAOA,KAAMN,OACpB,EAAKO,SAAS,CAACP,SAAQD,WAAW,IAF1B,sC,mFAORS,KAAKP,c,+BAIA,IAAD,EACwBO,KAAKV,MAA1BC,EADH,EACGA,UAAWC,EADd,EACcA,OAElB,OACI,6BAASX,UAAU,aACdU,EACG,yBAAKV,UAAU,UACf,0BAAMA,UAAU,gBAAhB,eAGA,yBAAKA,UAAU,UACVW,EAAOR,KAAI,SAAAiB,GAAK,OACjB,kBAAC,EAAD,CACId,IAAMc,EAAMC,GACZ1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAASqB,EAAMrB,kB,GApCzBwB,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.19cb67c7.chunk.js","sourcesContent":["//axios로 가져온 movies 오브젝트 모음 어레이들을 render 할거임\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./App.css\";\r\n\r\n//state가 필요없으니까 function component로\r\n//6. Movie 함수 만들기 prop에 들어가는 값 인수로\r\nfunction Movie({year, title, summary,poster, genres}){\r\n    return (\r\n        <div className = \"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className = \"movies__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"genres__genre\">\r\n                            {genre}\r\n                        </li> \r\n                    ))}\r\n                </ul>                \r\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n            </div>\r\n    </div>\r\n    );\r\n}\r\n//7.유용한 proptypes로 확인\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n//8.익스포트 잊지말고\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\"; //fetch의 레이어 초콜릿 데이터가져올때 사용\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n    //1. class를 쓰는이유 변화가능한 데이터의 공간 state state는 오브젝\n    state={\n        isLoading: true,\n        movies: []\n    };\n    // 4. 비동기 함수 실행다될떄까지 js가 기다려줘야함\n    getMovies = async () => {\n        const {data: {data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n        this.setState({movies, isLoading: false}); // Movies: Movies,, setState는 새로운 state로 대체하는 것 하지만 이제 this.state호출해도 바뀐거 나옴 current 쓰는게 더좋긴함\n    }\n    //data를 fetch할 것임.\n    //3.component 첫 render후 실행되는 함수\n    componentDidMount(){\n        this.getMovies();\n    }    \n    //2. render함수안에있는거 자동실행!\n    //5. setState후에 다시 렌더함수 실행!\n    render(){\n        const {isLoading, movies} = this.state; //여기서 의문점이 드나,, 왜 const 그저 es6문법? setState호출하면 this.state 값이 바뀜!  \n        //js들 위에꺼는 js es6코스\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                    <span className=\"loader__text\">Loading...</span>\n                    </div>  \n                 ) : (\n                    <div className=\"movies\">\n                        {movies.map(movie => (\n                        <Movie \n                            key= {movie.id} \n                            year={movie.year} \n                            title={movie.title} \n                            summary={movie.summary} \n                            poster={movie.medium_cover_image}\n                            genres= {movie.genres}\n                        /> //map 사용할때!! key 잊기쉬운데 경고뜨니까 넣어주기 여기서만 값주면 됨!\n                        ))}\n                    </div>    \n                )}\n            </section>\n        );}\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './AppMoviepretty';//같은 폴더의 App.js\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}